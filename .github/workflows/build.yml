name: Build Executable

on:
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest', 'ubuntu-24.04', 'macos-latest']
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.13'
    - name: Configure secrets
      shell: bash # bulletproof
      run: |        
        if [ "${{ runner.os }}" = "macOS" ]; then
          sed -i '' 's|CLIENT_ID = os\.environ\.get('\''CLIENT_ID'\'')|CLIENT_ID = '"'${{ secrets.CLIENT_ID }}'"'|' event_finder/libCal.py
          sed -i '' 's|CLIENT_SECRET = os\.environ\.get('\''CLIENT_SECRET'\'')|CLIENT_SECRET = '"'${{ secrets.CLIENT_SECRET }}'"'|' event_finder/libCal.py
          sed -i '' 's|API_URL = os\.environ\.get('\''API_URL'\'')|API_URL = '"'${{ secrets.API_URL }}'"'|' event_finder/libCal.py
        else
          sed -i 's|CLIENT_ID = os\.environ\.get('\''CLIENT_ID'\'')|CLIENT_ID = '"'${{ secrets.CLIENT_ID }}'"'|' event_finder/libCal.py
          sed -i 's|CLIENT_SECRET = os\.environ\.get('\''CLIENT_SECRET'\'')|CLIENT_SECRET = '"'${{ secrets.CLIENT_SECRET }}'"'|' event_finder/libCal.py
          sed -i 's|API_URL = os\.environ\.get('\''API_URL'\'')|API_URL = '"'${{ secrets.API_URL }}'"'|' event_finder/libCal.py
        fi
    - run: pip install -r event_finder/requirements.txt pyinstaller
    - run: pyinstaller event_finder/app.spec
    - uses: actions/upload-artifact@v4
      with:
        name: LibraryEvents-${{ matrix.os }}
        path: |
          ${{ startsWith(matrix.os, 'windows') && 'dist/LibraryEvents.exe' || '' }}
          ${{ startsWith(matrix.os, 'macos') && 'dist/LibraryEvents.app' || '' }}
          ${{ startsWith(matrix.os, 'ubuntu') && 'dist/LibraryEvents' || '' }}
